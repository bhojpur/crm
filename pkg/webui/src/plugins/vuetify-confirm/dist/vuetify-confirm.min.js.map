{"version":3,"file":"vuetify-confirm.min.js","sources":["../src/Confirm.vue","../src/index.js"],"sourcesContent":["<template>\n  <v-dialog eager @input=\"change\" value=\"true\" :max-width=\"width\" :persistent=\"persistent\" @keydown.esc=\"choose(false)\">\n    <v-card tile>\n      <v-toolbar v-if=\"Boolean(title)\" dark :color=\"color\" dense flat>\n        <v-icon v-if=\"Boolean(icon)\" left>{{ icon }}</v-icon>\n        <v-toolbar-title class=\"white--text\" v-text=\"title\"/>\n      </v-toolbar>\n      <v-card-text class=\"body-1 text-body-1 py-3\" v-html=\"message\"/>\n      <v-card-actions>\n        <v-spacer/>\n        <v-btn\n          v-if=\"Boolean(buttonFalseText)\"\n          :color=\"buttonFalseColor\"\n          :text=\"buttonFalseFlat\"\n          @click=\"choose(false)\"\n        >\n          {{ buttonFalseText }}\n        </v-btn>\n        <v-btn\n          v-if=\"Boolean(buttonTrueText)\"\n          :color=\"buttonTrueColor\"\n          :text=\"buttonTrueFlat\"\n          @click=\"choose(true)\"\n        >\n          {{ buttonTrueText }}\n        </v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { VCard, VCardActions, VCardText, VDialog, VIcon, VToolbar, VToolbarTitle, VSpacer, VBtn } from 'vuetify/lib'\n\nexport default {\n  components: {\n    VCard,\n    VCardActions,\n    VCardText,\n    VDialog,\n    VIcon,\n    VToolbar,\n    VToolbarTitle,\n    VSpacer,\n    VBtn\n  },\n  props: {\n    buttonTrueText: {\n      type: String,\n      default: 'Yes'\n    },\n    buttonFalseText: {\n      type: String,\n      default: 'No'\n    },\n    buttonTrueColor: {\n      type: String,\n      default: 'primary'\n    },\n    buttonFalseColor: {\n      type: String,\n      default: 'grey'\n    },\n    buttonFalseFlat: {\n      type: Boolean,\n      default: true\n    },\n    buttonTrueFlat: {\n      type: Boolean,\n      default: true\n    },\n    color: {\n      type: String,\n      default: 'warning'\n    },\n    icon: {\n      type: String,\n      default () {\n        return this.$vuetify.icons.values.warning\n      }\n    },\n    message: {\n      type: String,\n      required: true\n    },\n    persistent: Boolean,\n    title: {\n      type: String\n    },\n    width: {\n      type: Number,\n      default: 450\n    }\n  },\n  data () {\n    return {\n      value: false\n    }\n  },\n  mounted () {\n    document.addEventListener('keyup', this.onEnterPressed)\n  },\n  destroyed () {\n    document.removeEventListener('keyup', this.onEnterPressed)\n  },\n  methods: {\n    onEnterPressed (e) {\n      if (e.keyCode === 13) {\n        e.stopPropagation()\n        this.choose(true)\n      }\n    },\n    choose (value) {\n      this.$emit('result', value)\n      this.value = value\n      this.$destroy()\n    },\n    change (res) {\n      this.$destroy()\n    }\n  }\n}\n</script>\n","import Confirm from './Confirm.vue'\n\nfunction Install (Vue, options = {}) {\n  const property = options.property || '$confirm'\n  delete options.property\n  const vuetify = options.vuetify\n  delete options.vuetify\n  if (!vuetify) {\n    console.warn('Module vuetify-confirm needs vuetify instance. Use Vue.use(VuetifyConfirm, { vuetify })')\n  }\n  const Ctor = Vue.extend(Object.assign({ vuetify }, Confirm))\n  function createDialogCmp (options) {\n    const container = document.querySelector('[data-app=true]') || document.body\n    return new Promise(resolve => {\n      const cmp = new Ctor(Object.assign({}, {\n        propsData: Object.assign({}, Vue.prototype[property].options, options),\n        destroyed: () => {\n          container.removeChild(cmp.$el)\n          resolve(cmp.value)\n        }\n      }))\n      container.appendChild(cmp.$mount().$el)\n    })\n  }\n  \n  function show (message, options = {}) {\n    options.message = message\n    return createDialogCmp(options)\n  }\n\n  Vue.prototype[property] = show\n  Vue.prototype[property].options = options || {}\n}\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(Install)\n}\n\nexport default Install\n"],"names":["render","String","Boolean","this","$vuetify","icons","values","warning","Number","addEventListener","onEnterPressed","removeEventListener","e","keyCode","stopPropagation","choose","value","$emit","$destroy","res","Install","Vue","options","property","vuetify","warn","Ctor","extend","Object","assign","Confirm","prototype","message","container","document","querySelector","body","Promise","resolve","cmp","removeChild","$el","appendChild","$mount","createDialogCmp","window","use"],"mappings":"yPAkCA,OAAgBA,w0CAcJC,eACG,6BAGHA,eACG,4BAGHA,eACG,kCAGHA,eACG,8BAGHC,iBACG,wBAGHA,iBACG,eAGHD,eACG,sBAGHA,iCAEGE,KAAKC,SAASC,MAAMC,OAAOC,wBAI9BN,iBACI,cAEAC,oBAEJD,oBAGAO,eACG,oCAKF,gCAIAC,iBAAiB,QAASN,KAAKO,+CAG/BC,oBAAoB,QAASR,KAAKO,kDAG3BE,GACI,KAAdA,EAAEC,YACFC,uBACGC,QAAO,qBAGRC,QACDC,MAAM,SAAUD,QAChBA,MAAQA,OACRE,4BAECC,QACDD,uBCpHFE,EAASC,EAAKC,0BACfC,EAAWD,EAAQC,UAAY,kBAC9BD,EAAQC,aACTC,EAAUF,EAAQE,eACjBF,EAAQE,QACVA,WACKC,KAAK,+FAETC,EAAOL,EAAIM,OAAOC,OAAOC,gBAASL,GAAWM,MAoB/CC,UAAUR,YALCS,EAASV,+BACdU,QAAUA,WAfMV,OAClBW,EAAYC,SAASC,cAAc,oBAAsBD,SAASE,YACjE,IAAIC,iBAAQC,OACXC,EAAM,IAAIb,EAAKE,OAAOC,qBACfD,OAAOC,UAAWR,EAAIU,UAAUR,GAAUD,QAASA,0BAElDkB,YAAYD,EAAIE,OAClBF,EAAIvB,aAGN0B,YAAYH,EAAII,SAASF,OAM9BG,CAAgBtB,MAIrBS,UAAUR,GAAUD,QAAUA,YAGd,oBAAXuB,QAA0BA,OAAOxB,YACnCA,IAAIyB,IAAI1B"}